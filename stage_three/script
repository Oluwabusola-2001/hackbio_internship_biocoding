TASK

Age Prediction in Humans

Study the data here (DOWNLOADED AS CSV)
There are 1000 CpG sites to be used to determine the age of 108 individuals (Homo sapiens)
Using any regression model, predict the age of the patients (last columns)
In your feature selection step, reduce the number of features to select to 90, 80, 70, 60, 50, 40, 30, 20 and 10. How does the MSE behave with the reducing number of features?
Generate a plot of the number of features against the mse values

SOLUTION
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt

# Load the data
data = pd.read_csv("your_file.csv")

# Separate features and target
X = data.iloc[:, :-1].values  # All columns except the last one (features)
y = data.iloc[:, -1].values   # The last column (age)

# Function to select top k features based on correlation
def select_features(X, y, k):
    correlations = [np.corrcoef(X[:, i], y)[0, 1] for i in range(X.shape[1])]
    top_indices = np.argsort(np.abs(correlations))[-k:]
    return X[:, top_indices]

# Function to perform simple linear regression and calculate MSE
def train_model(X, y):
    n_samples = len(y)
    X = np.hstack((np.ones((n_samples, 1)), X))  # Add a bias term
    weights = np.linalg.inv(X.T @ X) @ X.T @ y  # Normal equation
    predictions = X @ weights
    mse = np.mean((y - predictions) ** 2)
    return mse

# Evaluate MSE for different feature counts
feature_counts = [90, 80, 70, 60, 50, 40, 30, 20, 10]
mse_values = []

for k in feature_counts:
    X_selected = select_features(X, y, k)
    mse = train_model(X_selected, y)
    mse_values.append(mse)

# Plot the results
plt.plot(feature_counts, mse_values, marker='o')
plt.xlabel('Number of Features')
plt.ylabel('MSE')
plt.title('Number of Features vs MSE')
plt.show()
